name: Test gfortran

on:
  push:
  workflow_dispatch:

jobs:

  test:
    name: Run gfortran tests
    #needs: check_date
    #if: ${{ github.event_name != 'schedule' || needs.check_date.outputs.has_recent_commit == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc]
        version: [9, 11, 12]  # Too expensive to test all versions
        bitness: [32, 64]

        # Limit the test on Windows to 64-bit and the latest version of the compiler.
        exclude:
          - os: macos-latest
            bitness: 32
          - os: windows-latest
            bitness: 32
          - os: ubuntu-22.04
            version: 9
          - os: windows-latest
            version: 9

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Fortran
        id: setup_fortran
        # Use the action defined at github.com/zaikunzhang/setup-fortran to setup Fortran
        uses: awvwgk/setup-fortran@main
        with:
          compiler: ${{ matrix.compiler }}
          version: ${{ matrix.version }}

      - name: Check Fortran compiler
        run: |
          ${{ env.FC }} --version
          ${{ env.CC }} --version
        shell: bash
        env:
          FC: ${{ steps.setup_fortran.outputs.fc }}
          CC: ${{ steps.setup_fortran.outputs.cc }}

      - name: Make sed available on Windows
        if: runner.os == 'Windows'
        run: $env:Path += ";C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin"

      - name: Set environment variables
        shell: bash  # Important; otherwise, the following statements do not work on Windows.
        run: |
          TEST_DIR=/tmp/gittest_"$(date +%s)"_"$((RANDOM*RANDOM))"  # Needed in the Makefiles
          echo "TEST_DIR=$TEST_DIR" >> $GITHUB_ENV  # Make the environment variable available in subsequent steps
          echo "$TEST_DIR"

      - name: Conduct the test
        shell: bash  # Important; otherwise, `<` will not work on Windows.
        # Not sure whether the Makefile has bugs, but on Windows the making of gtest always invokes
        # the making of gtest_c twice even if the former is up to date after the first making. It
        # may lead to errors due to parallel making. To avoid this, we make gtest_c first.
        run: |
          $FC test_mem.f90 && ./a.out
